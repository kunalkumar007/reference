"use strict";(self.webpackChunkreference=self.webpackChunkreference||[]).push([[4576],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var r=i.createContext({}),p=function(e){var t=i.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(r.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,r=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),c=o,m=d["".concat(r,".").concat(c)]||d[c]||h[c]||a;return n?i.createElement(m,s(s({ref:t},u),{},{components:n})):i.createElement(m,s({ref:t},u))}));function c(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var l={};for(var r in t)hasOwnProperty.call(t,r)&&(l[r]=t[r]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var p=2;p<a;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1878:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return r},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var i=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],l={},r=void 0,p={unversionedId:"Python Course/Python Break,Continue & Pass Statements",id:"Python Course/Python Break,Continue & Pass Statements",isDocsHomePage:!1,title:"Python Break,Continue & Pass Statements",description:"012. Python Break,Continue & Pass Statements",source:"@site/docs/Python Course/012. Python Break,Continue & Pass Statements.md",sourceDirName:"Python Course",slug:"/Python Course/Python Break,Continue & Pass Statements",permalink:"/reference/docs/Python Course/Python Break,Continue & Pass Statements",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/Python Course/012. Python Break,Continue & Pass Statements.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python Loops",permalink:"/reference/docs/Python Course/Python Loops"},next:{title:"Python OOPs_ Class, Object, Inheritance & Con",permalink:"/reference/docs/Python Course/Python OOPs_ Class, Object, Inheritance & Con"}},u=[{value:"Python break statement",id:"python-break-statement",children:[{value:"Step 1)",id:"step-1",children:[]},{value:"Step 2)",id:"step-2",children:[]},{value:"Step 3)",id:"step-3",children:[]},{value:"Step 4)",id:"step-4",children:[]},{value:"Step 5)",id:"step-5",children:[]},{value:"Step 6)",id:"step-6",children:[]}]},{value:"Break statement execution flow",id:"break-statement-execution-flow",children:[{value:"Example: Break statement inside for-loop",id:"example-break-statement-inside-for-loop",children:[]},{value:"Example: Break statement inside while-loop",id:"example-break-statement-inside-while-loop",children:[]},{value:"Example: Break Statement inside nested loops",id:"example-break-statement-inside-nested-loops",children:[]}]},{value:"Python continue statement",id:"python-continue-statement",children:[{value:"Syntax:",id:"syntax",children:[]},{value:"Continue flow Chart",id:"continue-flow-chart",children:[]},{value:"Step 1)",id:"step-1-1",children:[]},{value:"Step 2)",id:"step-2-1",children:[]},{value:"Step 3)",id:"step-3-1",children:[]},{value:"Step 4)",id:"step-4-1",children:[]},{value:"Step 5)",id:"step-5-1",children:[]},{value:"Step 6)",id:"step-6-1",children:[]},{value:"Step 7)",id:"step-7",children:[]}]},{value:"Continue statement execution flow",id:"continue-statement-execution-flow",children:[{value:"Example : Continue inside for-loop",id:"example--continue-inside-for-loop",children:[]},{value:"Example : Continue inside while-loop",id:"example--continue-inside-while-loop",children:[]},{value:"Example: Continue inside nested-loop",id:"example-continue-inside-nested-loop",children:[]}]},{value:"What is pass statement in Python?",id:"what-is-pass-statement-in-python",children:[{value:"When to use the pass statement?",id:"when-to-use-the-pass-statement",children:[]},{value:"Example: pass statement inside a function",id:"example-pass-statement-inside-a-function",children:[]},{value:"Example: pass statement inside the class",id:"example-pass-statement-inside-the-class",children:[]},{value:"Example: pass statement inside the loop",id:"example-pass-statement-inside-the-loop",children:[]},{value:"Example : pass statement inside if-loop",id:"example--pass-statement-inside-if-loop",children:[]}]},{value:"When to use a break and continue statement?",id:"when-to-use-a-break-and-continue-statement",children:[]},{value:"Summary:",id:"summary",children:[]}],h={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ol",{start:12},(0,a.kt)("li",{parentName:"ol"},"Python Break,Continue & Pass Statements")),(0,a.kt)("p",null,'The concept of loops is available in almost all programming languages. Python loops help to iterate over a list, tuple, string, dictionary, and a set. There are two types of loop supported in Python "for" and "while". The block of code is executed multiple times inside the loop until the condition fails.'),(0,a.kt)("p",null,"The loop control statements break the flow of execution and terminate/skip the iteration as per our need. Python break and continue are used inside the loop to change the flow of the loop from its standard procedure."),(0,a.kt)("p",null,"A for-loop or while-loop is meant to iterate until the condition given fails. When you use a break or continue statement, the flow of the loop is changed from its normal way."),(0,a.kt)("h2",{id:"python-break-statement"},"Python break statement"),(0,a.kt)("p",null,"The break statement takes care of terminating the loop in which it is used. If the break statement is used inside nested loops, the current loop is terminated, and the flow will continue with the code followed that comes after the loop."),(0,a.kt)("p",null,"The flow chart for the break statement is as follows:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/2/080320_0756_Pythonbreak1.png",alt:"step1"})),(0,a.kt)("p",null,"The following are the steps involved in the flowchart."),(0,a.kt)("h3",{id:"step-1"},"Step 1)"),(0,a.kt)("p",null,"The loop execution starts."),(0,a.kt)("h3",{id:"step-2"},"Step 2)"),(0,a.kt)("p",null,"If the loop condition is true, it will execute step 2, wherein the body of the loop will get executed."),(0,a.kt)("h3",{id:"step-3"},"Step 3)"),(0,a.kt)("p",null,"If the loop's body has a break statement, the loop will exit and go to Step 6."),(0,a.kt)("h3",{id:"step-4"},"Step 4)"),(0,a.kt)("p",null,"After the loop condition is executed and done, it will proceed to the next iteration in Step 4."),(0,a.kt)("h3",{id:"step-5"},"Step 5)"),(0,a.kt)("p",null,"If the loop condition is false, it will exit the loop and go to Step 6."),(0,a.kt)("h3",{id:"step-6"},"Step 6)"),(0,a.kt)("p",null,"End of the loop."),(0,a.kt)("h2",{id:"break-statement-execution-flow"},"Break statement execution flow"),(0,a.kt)("p",null,"When the for-loop starts executing, it will check the if-condition. If ",(0,a.kt)("strong",{parentName:"p"},"true,")," the break statement is executed, and the for\u2013loop will get terminated. If the condition is false, the code inside for-loop will be executed."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/2/080320_0756_Pythonbreak2.png",alt:"step 2"})),(0,a.kt)("p",null,"When the while loop executes, it will check the if-condition; if it is ",(0,a.kt)("strong",{parentName:"p"},"true,")," the break statement is executed, and the while \u2013loop will exit. If if the condition is false, the code inside while-loop will get executed."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/2/080320_0756_Pythonbreak3.png",alt:"step 2"})),(0,a.kt)("h3",{id:"example-break-statement-inside-for-loop"},"Example: Break statement inside for-loop"),(0,a.kt)("p",null,"The list my_list = ","['Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru']"," is looped using for-loop.We are interested in searching for the name 'Guru ' from the list my_list."),(0,a.kt)("p",null,"Inside the for-loop, the if-condition compares each item from the list with the name 'Guru'. If the condition becomes true, it will execute the break statement, and the loop will get terminated."),(0,a.kt)("p",null,"The working example using break statement is as shown below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"my_list = ['Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru'] \n\nfor i in range(len(my_list)):\n    print(my_list[i])\n    if my_list[i] == 'Guru':\n        print('Found the name Guru')\n        break\n        print('After break statement')\n\nprint('Loop is Terminated')\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"Siya\nTiya\nGuru\nFound the name Guru\nLoop is Terminated\n")),(0,a.kt)("h3",{id:"example-break-statement-inside-while-loop"},"Example: Break statement inside while-loop"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"my_list = ['Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru'] \ni = 0\n\nwhile True:\n    print(my_list[i])\n    if (my_list[i] == 'Guru'):\n        print('Found the name Guru')\n        break\n        print('After break statement')\n    i += 1\n\nprint('After while-loop exit')\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"Siya\nTiya\nGuru\nFound name Guru\nAfter while-loop exit\n")),(0,a.kt)("h3",{id:"example-break-statement-inside-nested-loops"},"Example: Break Statement inside nested loops"),(0,a.kt)("p",null,"In the example, we have 2 for-loops. Both for-loops are iterating from a range of 0 to 3. In the second for-loop, we have added a condition where-in if the value of the second for-loop index is 2, it should break."),(0,a.kt)("p",null,"So because of the break statement, the second for-loop will never iterate for 2 and 3."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'for i in range(4):\n    for j in range(4):          \n        if j==2:    \n            break\n        print("The number is ",i,j);  \n')),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"The number is  0 0\nThe number is  0 1\nThe number is  1 0\nThe number is  1 1\nThe number is  2 0\nThe number is  2 1\nThe number is  3 0\nThe number is  3 1\n")),(0,a.kt)("h2",{id:"python-continue-statement"},"Python continue statement"),(0,a.kt)("p",null,"The continue statement skips the code that comes after it, and the control is passed back to the start for the next iteration."),(0,a.kt)("h3",{id:"syntax"},"Syntax:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"continue\n")),(0,a.kt)("h3",{id:"continue-flow-chart"},"Continue flow Chart"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/2/080320_0756_Pythonbreak4.png",alt:"step 3"}),"\nThe following are the steps involved in the flowchart."),(0,a.kt)("h3",{id:"step-1-1"},"Step 1)"),(0,a.kt)("p",null,"The loop execution starts."),(0,a.kt)("h3",{id:"step-2-1"},"Step 2)"),(0,a.kt)("p",null,"The execution of code inside the loop will be done. If there is a continued statement inside the loop, the control will go back to Step 4, i.e., the start of the loop for the next iteration."),(0,a.kt)("h3",{id:"step-3-1"},"Step 3)"),(0,a.kt)("p",null,"The execution of code inside the loop will be done."),(0,a.kt)("h3",{id:"step-4-1"},"Step 4)"),(0,a.kt)("p",null,"If there is a continue statement or the loop execution inside the body is done, it will call the next iteration."),(0,a.kt)("h3",{id:"step-5-1"},"Step 5)"),(0,a.kt)("p",null,"Once the loop execution is complete, the loop will exit and go to step 7."),(0,a.kt)("h3",{id:"step-6-1"},"Step 6)"),(0,a.kt)("p",null,"If the loop condition in step 1 fails, it will exit the loop and go to step 7."),(0,a.kt)("h3",{id:"step-7"},"Step 7)"),(0,a.kt)("p",null,"End of the loop."),(0,a.kt)("h2",{id:"continue-statement-execution-flow"},"Continue statement execution flow"),(0,a.kt)("p",null,"The for \u2013loop, loops through my_list array given. Inside the for-loop, the if-condition gets executed. If the condition is ",(0,a.kt)("strong",{parentName:"p"},"true,")," the continue statement is executed, and the control will pass to the start of the loop for the next iteration."),(0,a.kt)("p",null,"The flow of the code is as shown below:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/2/080320_0756_Pythonbreak5.png",alt:"step"})),(0,a.kt)("p",null,"When the while loop executes, it will check the if-condition, if it is ",(0,a.kt)("strong",{parentName:"p"},"true,")," the continue statement is executed. The control will go back to the start of while \u2013loop for the next iteration. If if the condition is false, the code inside while-loop will get executed."),(0,a.kt)("p",null,"The flow of the code is as shown below:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/2/080320_0756_Pythonbreak6.png",alt:"step"})),(0,a.kt)("h3",{id:"example--continue-inside-for-loop"},"Example : Continue inside for-loop"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'for i in range(10):    \n    if i == 7:\n        continue  \n    print("The Number is :" , i)\n')),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"The Number is : 0\nThe Number is : 1\nThe Number is : 2\nThe Number is : 3\nThe Number is : 4\nThe Number is : 5\nThe Number is : 6\nThe Number is : 8\nThe Number is : 9\n")),(0,a.kt)("h3",{id:"example--continue-inside-while-loop"},"Example : Continue inside while-loop"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'i = 0\nwhile i <= 10:    \n    if i == 7:\n        i += 1\n        continue  \n    print("The Number is  :" , i)\n    i += 1\n')),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"The Number is  : 0\nThe Number is  : 1\nThe Number is  : 2\nThe Number is  : 3\nThe Number is  : 4\nThe Number is  : 5\nThe Number is  : 6\nThe Number is  : 8\nThe Number is  : 9\nThe Number is  : 10\n")),(0,a.kt)("h3",{id:"example-continue-inside-nested-loop"},"Example: Continue inside nested-loop"),(0,a.kt)("p",null,"The below example shows using 2 for-loops. Both for-loops are iterating from a range of 0 to 3. In the second for-loop, there is a condition, wherein if the value of the second for-loop index is 2, it should continue. So because of the continue statement, the second for-loop will skip iteration for 2 and proceed for 3."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'for i in range(4):\n    for j in range(4):          \n        if j==2:    \n            continue\n        print("The number is ",i,j);\n')),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"The number is  0 0\nThe number is  0 1\nThe number is  0 3\nThe number is  1 0\nThe number is  1 1\nThe number is  1 3\nThe number is  2 0\nThe number is  2 1\nThe number is  2 3\nThe number is  3 0\nThe number is  3 1\nThe number is  3 3\n")),(0,a.kt)("h1",{id:"python-pass-statement"},"Python pass statement"),(0,a.kt)("p",null,"Python pass statement is used as a placeholder inside loops, functions, class, if-statement that is meant to be implemented later."),(0,a.kt)("p",null,"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"pass\n")),(0,a.kt)("h2",{id:"what-is-pass-statement-in-python"},"What is pass statement in Python?"),(0,a.kt)("p",null,"Python pass is a null statement. When the Python interpreter comes across the across pass statement, it does nothing and is ignored."),(0,a.kt)("h3",{id:"when-to-use-the-pass-statement"},"When to use the pass statement?"),(0,a.kt)("p",null,"Consider you have a function or a class with the body left empty. You plan to write the code in the future. The Python interpreter will throw an error if it comes across an empty body."),(0,a.kt)("p",null,"A comment can also be added inside the body of the function or class, but the interpreter ignores the comment and will throw an error."),(0,a.kt)("p",null,"The pass statement can be used inside the body of a function or class body. During execution, the interpreter, when it comes across the pass statement, ignores and continues without giving any error."),(0,a.kt)("h3",{id:"example-pass-statement-inside-a-function"},"Example: pass statement inside a function"),(0,a.kt)("p",null,"In the example, the pass is added inside the function. It will get executed when the function is called as shown below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def my_func():\n    print('pass inside function')\n    pass\nmy_func()\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"pass inside function\n")),(0,a.kt)("h3",{id:"example-pass-statement-inside-the-class"},"Example: pass statement inside the class"),(0,a.kt)("p",null,'In the example below, we have created just the empty class that has a print statement followed by a pass statement. The pass statement is an indication that the code inside the class "My_Class" will be implemented in the future.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'classMy_Class:\nprint("Inside My_Class")    \npass\n')),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"Inside My_Class\n")),(0,a.kt)("h3",{id:"example-pass-statement-inside-the-loop"},"Example: pass statement inside the loop"),(0,a.kt)("p",null,"In the example below, the string 'Guru' is used inside for-loop. The if-condition checks for character 'r' and calls the print statement followed by pass."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# Pass statement in for-loop\ntest = \"Guru\"\nfor i in test: \n    if i == 'r': \n        print('Pass executed') \n        pass\n    print(i)\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"G\nu\nPass executed\nr\nu\n")),(0,a.kt)("h3",{id:"example--pass-statement-inside-if-loop"},"Example : pass statement inside if-loop"),(0,a.kt)("p",null,'In the example the if loop checks for the value of a and if the condition is true it goes and prints the statement "pass executed" followed by pass.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"a=1\nif a==1:\n    print('pass executed')\n    pass\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"pass executed\n")),(0,a.kt)("h2",{id:"when-to-use-a-break-and-continue-statement"},"When to use a break and continue statement?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A break statement, when used inside the loop, will terminate the loop and exit. If used inside nested loops, it will break out from the current loop."),(0,a.kt)("li",{parentName:"ul"},"A continue statement will stop the current execution when used inside a loop, and the control will go back to the start of the loop.")),(0,a.kt)("p",null,"The main difference between break and continue statement is that when break keyword is encountered, it will exit the loop."),(0,a.kt)("p",null,"In case of continue keyword, the current iteration that is running will be stopped, and it will proceed with the next iteration."),(0,a.kt)("h2",{id:"summary"},"Summary:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Python break and continue are used inside the loop to change the flow of the loop from its normal procedure."),(0,a.kt)("li",{parentName:"ul"},"A for-loop or while-loop is meant to iterate until the condition given fails. When you use a break or continue statement, the flow of the loop is changed from its normal way."),(0,a.kt)("li",{parentName:"ul"},"A ",(0,a.kt)("strong",{parentName:"li"},"break")," statement, when used inside the loop, will terminate the loop and exit. If used inside nested loops, it will break out from the current loop."),(0,a.kt)("li",{parentName:"ul"},"A ",(0,a.kt)("strong",{parentName:"li"},"continue")," statement, when used inside a loop, will stop the current execution, and the control will go back to the start of the loop."),(0,a.kt)("li",{parentName:"ul"},"The main difference between ",(0,a.kt)("strong",{parentName:"li"},"break")," and ",(0,a.kt)("strong",{parentName:"li"},"continue")," statement is that when ",(0,a.kt)("strong",{parentName:"li"},"break")," keyword is encountered, it will exit the loop."),(0,a.kt)("li",{parentName:"ul"},"Python Pass Statement is used as a placeholder inside loops, functions, class, if-statement that is meant to be implemented later."),(0,a.kt)("li",{parentName:"ul"},"Python pass is a null statement. When the execution starts and the interpreter comes across the pass statement, it does nothing and is ignored.")))}d.isMDXComponent=!0}}]);