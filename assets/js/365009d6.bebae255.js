"use strict";(self.webpackChunkreference=self.webpackChunkreference||[]).push([[6226],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=o.createContext({}),u=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=u(e.components);return o.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(n),h=i,f=m["".concat(p,".").concat(h)]||m[h]||c[h]||a;return n?o.createElement(f,r(r({ref:t},s),{},{components:n})):o.createElement(f,r({ref:t},s))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var u=2;u<a;u++)r[u]=n[u];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},213:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return s},default:function(){return m}});var o=n(7462),i=n(3366),a=(n(7294),n(3905)),r=["components"],l={},p=void 0,u={unversionedId:"Python Course/Python Copy File",id:"Python Course/Python Copy File",isDocsHomePage:!1,title:"Python Copy File",description:"036. Python Copy File",source:"@site/docs/Python Course/036. Python Copy File.md",sourceDirName:"Python Course",slug:"/Python Course/Python Copy File",permalink:"/reference/docs/Python Course/Python Copy File",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/Python Course/036. Python Copy File.md",tags:[],version:"current",sidebarPosition:36,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python Check If File or Directory Exists",permalink:"/reference/docs/Python Course/Python Check If File or Directory Exists"},next:{title:"Python Rename File",permalink:"/reference/docs/Python Course/Python Rename File"}},s=[{value:"Code Explanation",id:"code-explanation",children:[]},{value:"Code Explanation",id:"code-explanation-1",children:[]},{value:"Summary",id:"summary",children:[]}],c={toc:s};function m(e){var t=e.components,n=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ol",{start:36},(0,a.kt)("li",{parentName:"ol"},"Python Copy File")),(0,a.kt)("h1",{id:"python-copy-file-methods"},"Python Copy File Methods"),(0,a.kt)("p",null,"Python provides in-built functions for easily copying files using the Operating System Shell utilities."),(0,a.kt)("p",null,"Following command is used to Copy File"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"shutil.copy(src,dst)\n")),(0,a.kt)("p",null,"Following command is used to Copy File with MetaData Information"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"shutil.copystat(src,dst)\n")),(0,a.kt)("p",null,"Here are the steps to copy file in Python"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 1)")," Before, we copy a file, we need to get the the path to the original file in the current directory. In the code -"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Declaring variable"),(0,a.kt)("li",{parentName:"ol"},"Applying split function on variable")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/Pythonnew/Python18.5.png",alt:"image"})),(0,a.kt)("h2",{id:"code-explanation"},"Code Explanation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'First we are going to check that our "guru99.txt" file exists or not. Since we have created guru99.txt file earlier, we know it exists, and we will carry on further with the code'),(0,a.kt)("li",{parentName:"ul"},'We store the file path in the variable "src" if your file exist'),(0,a.kt)("li",{parentName:"ul"},"Once we get the path, we going to separate the path and the file name"),(0,a.kt)("li",{parentName:"ul"},"For that, we are going to use the split ",(0,a.kt)("inlineCode",{parentName:"li"},"path.split")," function on source variable"),(0,a.kt)("li",{parentName:"ul"},"Code when executed prints out ",(0,a.kt)("strong",{parentName:"li"},'"file name"')," and ",(0,a.kt)("strong",{parentName:"li"},'"file path"')," separately")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 2)"),' We use Shutil Module to create a copy of the existing file. Here we used to create a copy of our existing file "guru99.txt."'),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/Pythonnew/Python18.6.png",alt:"image"})),(0,a.kt)("h2",{id:"code-explanation-1"},"Code Explanation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'Take the original file name "guru99.txt" and add letters .bak at the end "guru99.txt.bak". This name with .bak extension is going to be our duplicate copy'),(0,a.kt)("li",{parentName:"ul"},"And then we going to use utility's copy function to copy from source to the destination"),(0,a.kt)("li",{parentName:"ul"},"When you run the code, you will see a duplicate file with .bak extension is created on right-hand side of the panel")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 3)")," Copy function only copies the content of the file but no other information. To copy ",(0,a.kt)("strong",{parentName:"p"},"meta-data")," associated with the file, file permission and other information you have to use ",(0,a.kt)("strong",{parentName:"p"},'"copystat"'),' function. Before we run this code, we have to delete our copy file "guru99.text.bak".'),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/Pythonnew/Python18.7.png",alt:"image"})),(0,a.kt)("p",null,"Once you deleted the file and run the program it will create a copy of your .txt file but this time with all the information like file permission, modification time and meta-data information. You can go to your O.S shell to verify the information."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/Pythonnew/Python18.8.png",alt:"image"})),(0,a.kt)("p",null,"Here is the code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import os\nimport shutil\nfrom os import path\n\ndef main():\n    # make a duplicate of an existing file\n    if path.exists("guru99.txt"):\n    # get the path to the file in the current directory\n        src = path.realpath("guru99.txt");\n    \n    #seperate the path from the filter\n    head, tail = path.split(src)\n    print("path:" +head)\n    print("file:" +tail)\n    \n    #let\'s make a backup copy by appending "bak" to the name\n    dst = src+".bak"\n    # nowuse the shell to make a copy of the file\n    shutil.copy(src, dst)\n    \n    #copy over the permissions,modification\n    shutil.copystat(src,dst)\n    \nif __name__=="__main__":\n    main()\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 4)")," You can fetch the information about the text file last modified"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/Pythonnew/Python18.4_New.png",alt:"image"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Code Line#15- It tells the day, date, month, year and time when .txt file (guru99) was last modified. We use the path module to get the file modification time details, and then we are going to use the time classes c time function to convert that into a readable time. So when we run the code, we can see the file guru99.txt was last modified on Mon, Jan 8th at 13:35 2018."),(0,a.kt)("li",{parentName:"ul"},'Code Line#17- It does the same thing giving information about file modification, but it has a different format to represent it. Here we use Get Modification Time function (path.getmtime("guru99.txt")). Now instead of using the c time function we going to use From Time Stamp function and going to construct a date time object. In output, you can see file modification time detail is printed out in different format 2018-01-08, 13:35:51.334072\nHere is the code')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'#\n# Example file for working with o.s path module\n\n\nimport os\nfrom os import path\nimport datetime\nfrom datetime import date, time, timedelta\nimport time\n\ndef main():\n\n\n    # Get the modification time\n    t = time.ctime(path.getmtime("guru99.txt.bak"))\n    print(t)\n    print(datetime.datetime.fromtimestamp(path.getmtime("guru99.txt.bak")))\n\n\nif __name__ == "__main__":\n    main()\n')),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To create a copy of the existing file by use code shutil.copy (src,dst)"),(0,a.kt)("li",{parentName:"ul"},"To copy all the information of original file to duplicate file like file permission, modification time or meta-data information by use code shutil.copystat(src,dst)")))}m.isMDXComponent=!0}}]);