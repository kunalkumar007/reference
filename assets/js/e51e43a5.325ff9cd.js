"use strict";(self.webpackChunkreference=self.webpackChunkreference||[]).push([[4908],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),h=p(n),m=i,f=h["".concat(l,".").concat(m)]||h[m]||c[m]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=h;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4959:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return h}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),s=["components"],a={},l=void 0,p={unversionedId:"Python Course/Python Check If File or Directory Exists",id:"Python Course/Python Check If File or Directory Exists",isDocsHomePage:!1,title:"Python Check If File or Directory Exists",description:"035. Python Check If File or Directory Exists",source:"@site/docs/Python Course/035. Python Check If File or Directory Exists.md",sourceDirName:"Python Course",slug:"/Python Course/Python Check If File or Directory Exists",permalink:"/reference/docs/Python Course/Python Check If File or Directory Exists",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/Python Course/035. Python Check If File or Directory Exists.md",tags:[],version:"current",sidebarPosition:35,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python File handling",permalink:"/reference/docs/Python Course/Python File handling"},next:{title:"Python Copy File",permalink:"/reference/docs/Python Course/Python Copy File"}},u=[{value:"os.path.exists()",id:"ospathexists",children:[]},{value:"os.path.isfile()",id:"ospathisfile",children:[]},{value:"os.path.isdir()",id:"ospathisdir",children:[]},{value:"pathlibPath.exists() For Python 3.4",id:"pathlibpathexists-for-python-34",children:[]}],c={toc:u};function h(e){var t=e.components,n=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("ol",{start:35},(0,o.kt)("li",{parentName:"ol"},"Python Check If File or Directory Exists")),(0,o.kt)("h1",{id:"python-exists"},"Python exists()"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Python exists()")," method is used to check whether specific file or directory exists or not. It is also used to check if a path refers to any open file descriptor or not. It returns boolean value true if file exists and returns false otherwise. It is used with os module and os.path sub module as os.path.exists(path)."),(0,o.kt)("p",null,"In this tutorial, we will learn how to determine whether a file (or directory) exists using Python. To check this, we use Built-in library functions."),(0,o.kt)("h2",{id:"ospathexists"},"os.path.exists()"),(0,o.kt)("p",null,"Using path.exists you can quickly check that a file or directory exists. Here are the steps"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Steps 1)")," Before you run the code, it is important that you import the os.path module."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import os.path\nfrom os import path\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Steps 2)")," Now, use the path.exists() function to check whether a File Exists."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'path.exists("guru99.txt")\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Steps 3)")," Here is the complete code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import os.path\nfrom os import path\n\ndef main():\n\n   print ("File exists:"+str(path.exists(\'guru99.txt\')))\n   print ("File exists:" + str(path.exists(\'career.guru99.txt\')))\n   print ("directory exists:" + str(path.exists(\'myDirectory\')))\n\nif __name__== "__main__":\n   main()\n')),(0,o.kt)("p",null,"In our case only file guru99.txt is created in the working directory"),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"File exists: True\nFile exists: False\ndirectory exists: False\n")),(0,o.kt)("h1",{id:"python-isfile"},"Python isfile()"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Python isfile()")," method is used to find whether a given path is an existing regular file or not. It returns a boolean value true if the specific path is an existing file or else it returns false. It can be used by the syntax : os.path.isfile(path)."),(0,o.kt)("h2",{id:"ospathisfile"},"os.path.isfile()"),(0,o.kt)("p",null,"We can use the isfile command to check whether a given input is a file or not."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import os.path\nfrom os import path\n\ndef main():\n\n    print ("Is it File?" + str(path.isfile(\'guru99.txt\')))\n    print ("Is it File?" + str(path.isfile(\'myDirectory\')))\nif __name__== "__main__":\n    main()\n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"Is it File? True\nIs it File? False\n")),(0,o.kt)("h2",{id:"ospathisdir"},"os.path.isdir()"),(0,o.kt)("p",null,"If we want to confirm that a given path points to a directory, we can use the os.path.dir() function"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import os.path\nfrom os import path\n\ndef main():\n\n   print ("Is it Directory?" + str(path.isdir(\'guru99.txt\')))\n   print ("Is it Directory?" + str(path.isdir(\'myDirectory\')))\n\nif __name__== "__main__":\n   main()\n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"Is it Directory? False\nIs it Directory? True\n")),(0,o.kt)("h2",{id:"pathlibpathexists-for-python-34"},"pathlibPath.exists() For Python 3.4"),(0,o.kt)("p",null,"Python 3.4 and above versions have pathlib Module for handling with file system path. It used object-oriented approach to check if file exist or not."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import pathlib\nfile = pathlib.Path("guru99.txt")\nif file.exists ():\n    print ("File exist")\nelse:\n    print ("File not exist")\n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"File exist\n")),(0,o.kt)("p",null,"Complete Code"),(0,o.kt)("p",null,"Here is the complete code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import os\nfrom os import path\n\ndef main():\n    # Print the name of the OS\n    print(os.name)\n#Check for item existence and type\nprint("Item exists:" + str(path.exists("guru99.txt")))\nprint("Item is a file: " + str(path.isfile("guru99.txt")))\nprint("Item is a directory: " + str(path.isdir("guru99.txt")))\n\nif __name__ == "__main__":\n    main()\n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"Item exists: True\nItem is a file: True\nItem is a directory: False\n")),(0,o.kt)("h1",{id:"how-to-check-if-file-exists"},"How to check If File Exists"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"os.path.exists()")," \u2013 Returns ",(0,o.kt)("inlineCode",{parentName:"li"},"True")," if path or directory does exists."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"os.path.isfile()")," \u2013 Returns ",(0,o.kt)("inlineCode",{parentName:"li"},"True")," if path is File."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"os.path.isdir()")," - Returns ",(0,o.kt)("inlineCode",{parentName:"li"},"True")," if path is Directory."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pathlib.Path.exists()")," - Returns ",(0,o.kt)("inlineCode",{parentName:"li"},"True")," if path or directory does exists. (In Python 3.4 and above versions)")))}h.isMDXComponent=!0}}]);