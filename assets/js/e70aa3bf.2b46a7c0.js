"use strict";(self.webpackChunkreference=self.webpackChunkreference||[]).push([[731],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),h=u(n),d=a,c=h["".concat(s,".").concat(d)]||h[d]||p[d]||l;return n?i.createElement(c,r(r({ref:t},m),{},{components:n})):i.createElement(c,r({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var u=2;u<l;u++)r[u]=n[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},955:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return m},default:function(){return h}});var i=n(7462),a=n(3366),l=(n(7294),n(3905)),r=["components"],o={},s=void 0,u={unversionedId:"Python Course/Python List index()",id:"Python Course/Python List index()",isDocsHomePage:!1,title:"Python List index()",description:"046. Python List index()",source:"@site/docs/Python Course/046. Python List index().md",sourceDirName:"Python Course",slug:"/Python Course/Python List index()",permalink:"/docs/Python Course/Python List index()",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/Python Course/046. Python List index().md",tags:[],version:"current",sidebarPosition:46,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python remove element from List",permalink:"/docs/Python Course/Python remove element from List"},next:{title:"SciPy in Python",permalink:"/docs/Python Course/SciPy in Python"}},m=[{value:"Syntax",id:"syntax",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Return Value",id:"return-value",children:[]},{value:"Example: To find the index of the given element.",id:"example-to-find-the-index-of-the-given-element",children:[]},{value:"Example: Using start and end in index()",id:"example-using-start-and-end-in-index",children:[]},{value:"Example: To test index() method with an element that is not present.",id:"example-to-test-index-method-with-an-element-that-is-not-present",children:[]},{value:"Using for-loop to get the index of an element in a list",id:"using-for-loop-to-get-the-index-of-an-element-in-a-list",children:[]},{value:"Using while-loop and list.index()",id:"using-while-loop-and-listindex",children:[]},{value:"Using list comprehension to get the index of element in a list",id:"using-list-comprehension-to-get-the-index-of-element-in-a-list",children:[]},{value:"Using Enumerate to get the index of an element in a list",id:"using-enumerate-to-get-the-index-of-an-element-in-a-list",children:[]},{value:"Using filter to get the index of an element in a list",id:"using-filter-to-get-the-index-of-an-element-in-a-list",children:[]},{value:"Using NumPy to get the index of an element in a list",id:"using-numpy-to-get-the-index-of-an-element-in-a-list",children:[]},{value:"Using more_itertools.locate() to get the index of an element in a list",id:"using-more_itertoolslocate-to-get-the-index-of-an-element-in-a-list",children:[]},{value:"Summary:",id:"summary",children:[]}],p={toc:m};function h(e){var t=e.components,n=(0,a.Z)(e,r);return(0,l.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("ol",{start:46},(0,l.kt)("li",{parentName:"ol"},"Python List index()")),(0,l.kt)("p",null,"A list is a container that stores items of different data types (ints, floats, Boolean, strings, etc.) in an ordered sequence. It is an important data structure that is in-built in Python. The data is written inside square brackets ([]), and the values are separated by comma(,)."),(0,l.kt)("p",null,"The items inside the list are indexed with the first element starting at index 0. You can make changes in the created list by adding new items or by updating, deleting the existing ones. It can also have duplicate items and a nested list."),(0,l.kt)("p",null,"There are many methods available on a list, and of the important one is the index()."),(0,l.kt)("h1",{id:"python-list-index"},"Python List index()"),(0,l.kt)("p",null,"The list index() method helps you to find the first lowest index of the given element. If there are duplicate elements inside the list, the first index of the element is returned. This is the easiest and straightforward way to get the index."),(0,l.kt)("p",null,"Besides the built-in list index() method, you can also use other ways to get the index like looping through the list, using list comprehensions, enumerate(), filter methods."),(0,l.kt)("p",null,"The list index() method returns the first lowest index of the given element."),(0,l.kt)("h2",{id:"syntax"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"list.index(element, start, end)\n")),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameters"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"element"),(0,l.kt)("td",{parentName:"tr",align:null},"The element that you want to get the index.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"start"),(0,l.kt)("td",{parentName:"tr",align:null},"This parameter is optional. You can define the start: index to search for the element. If not given, the default value is 0.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"end"),(0,l.kt)("td",{parentName:"tr",align:null},"This parameter is optional. You can specify the end index for the element to be searched. If not given, it is considered until the end of the list.")))),(0,l.kt)("h2",{id:"return-value"},"Return Value"),(0,l.kt)("p",null,"The list index() method returns the index of the given element. If the element is not present in the list, the index() method will throw an error, for example, ValueError: 'Element' is not in the list."),(0,l.kt)("h2",{id:"example-to-find-the-index-of-the-given-element"},"Example: To find the index of the given element."),(0,l.kt)("p",null,"In the list my_list = ","['A', 'B', 'C', 'D', 'E', 'F']"," , we would like to know the index for element C and F."),(0,l.kt)("p",null,"The example below shows how to get the index."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_list = ['A', 'B', 'C', 'D', 'E', 'F']\nprint(\"The index of element C is \", my_list.index('C'))\nprint(\"The index of element F is \", my_list.index('F'))\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"The index of element C is  2\nThe index of element F is  5\n")),(0,l.kt)("h2",{id:"example-using-start-and-end-in-index"},"Example: Using start and end in index()"),(0,l.kt)("p",null,"In this example will try to limit searching for index in a list using start and end index."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_list = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J']\nprint(\"The index of element C is \", my_list.index('C', 1, 5))\nprint(\"The index of element F is \", my_list.index('F', 3, 7))\n#using just the startindex\nprint(\"The index of element D is \", my_list.index('D', 1))\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"The index of element C is  2\nThe index of element F is  5\nThe index of element D is  3\n")),(0,l.kt)("h2",{id:"example-to-test-index-method-with-an-element-that-is-not-present"},"Example: To test index() method with an element that is not present."),(0,l.kt)("p",null,"When you try to search for index in the list for element that is not present ,you will get an error as shown below:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_list = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J']\nprint(\"The index of element C is \", my_list.index('Z'))\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Traceback (most recent call last):\nFile \"display.py\", line 3, in <module>\nprint(\"The index of element C is \", my_list.index('Z'))\nValueError: 'Z' is not in list\n")),(0,l.kt)("h2",{id:"using-for-loop-to-get-the-index-of-an-element-in-a-list"},"Using for-loop to get the index of an element in a list"),(0,l.kt)("p",null,"With the list.index() method, we have seen that it gives the index of the element that is passed as an argument."),(0,l.kt)("p",null,"Now consider the list as : my_list = ","['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru']"," . The name 'Guru' is present 3 times in the index, and I want all the indexes with the name 'Guru'."),(0,l.kt)("p",null,"Using for-loop we should be able to get the multiple indexes as shown in the example below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_list = ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru'] \nall_indexes = [] \nfor i in range(0, len(my_list)) : \n    if my_list[i] == 'Guru' : \n        all_indexes.append(i)\nprint(\"Originallist \", my_list)\nprint(\"Indexes for element Guru : \", all_indexes)\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Originallist  ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru']\nIndexes for element Guru :  [0, 3, 6]\n")),(0,l.kt)("h2",{id:"using-while-loop-and-listindex"},"Using while-loop and list.index()"),(0,l.kt)("p",null,"Using a while-loop will loop through the list given to get all the indexes of the given element."),(0,l.kt)("p",null,"In the list : my_list = ","['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru']",", we need the all the indexes of element 'Guru'."),(0,l.kt)("p",null,"Below given is an example shows how to get all the indexes using while-loop"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_list = ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru'] \nresult = []\nelementindex = -1\nwhile True:\n    try:\n        elementindex = my_list.index('Guru', elementindex+1)\n        result.append(elementindex)\n    except  ValueError:\n        break\nprint(\"OriginalList is \", my_list)\nprint(\"The index for element Guru is \", result)\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"OriginalList is  ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru']\nThe index for element Guru is  [0, 3, 6]\n")),(0,l.kt)("h2",{id:"using-list-comprehension-to-get-the-index-of-element-in-a-list"},"Using list comprehension to get the index of element in a list"),(0,l.kt)("p",null,"To get all the indexes, a fast and straightforward way is to make use of list comprehension on the list."),(0,l.kt)("p",null,"List comprehensions are Python functions that are used for creating new sequences (such as lists, dictionaries, etc.) i.e., using sequences that have already been created."),(0,l.kt)("p",null,"They help to reduce longer loops and make your code easier to read and maintain."),(0,l.kt)("p",null,"Following example shows how to do it:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_list = ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru'] \nprint(\"Originallist \", my_list)\nall_indexes = [a for a in range(len(my_list)) if my_list[a] == 'Guru']\nprint(\"Indexes for element Guru : \", all_indexes)\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Originallist  ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru']\nIndexes for element Guru :  [0, 3, 6]\n")),(0,l.kt)("h2",{id:"using-enumerate-to-get-the-index-of-an-element-in-a-list"},"Using Enumerate to get the index of an element in a list"),(0,l.kt)("p",null,"Enumerate() function is a built-in function available with python. You can make use of enumerate to get all the indexes of the element in a list. It takes input as an iterable object (i.e., an object that can be looped), and the output is an object with a counter to each item."),(0,l.kt)("p",null,"Following example shows how to make use of enumerate on a list to get the all the indexes for given element."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_list = ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru'] \nprint(\"Originallist \", my_list)\nprint(\"Indexes for element Guru : \", [i for i, e in enumerate(my_list) if e == 'Guru'])\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Originallist  ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru']\nIndexes for element Guru :  [0, 3, 6]\n")),(0,l.kt)("h2",{id:"using-filter-to-get-the-index-of-an-element-in-a-list"},"Using filter to get the index of an element in a list"),(0,l.kt)("p",null,"The filter() method filters the given list based on the function given. Each element of the list will be passed to the function, and the elements required will be filtered based on the condition given in the function."),(0,l.kt)("p",null,"Let us use the filter() method to get the indexes for the given element in the list."),(0,l.kt)("p",null,"Following example shows how to make use of filter on a list."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_list = ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru'] \nprint(\"Originallist \", my_list)\nall_indexes = list(filter(lambda i: my_list[i] == 'Guru', range(len(my_list)))) \nprint(\"Indexes for element Guru : \", all_indexes)\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Originallist  ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru']\nIndexes for element Guru :  [0, 3, 6]\n")),(0,l.kt)("h2",{id:"using-numpy-to-get-the-index-of-an-element-in-a-list"},"Using NumPy to get the index of an element in a list"),(0,l.kt)("p",null,"NumPy library is specially used for arrays. So here will make use of NumPy to get the index of the element we need from the list given."),(0,l.kt)("p",null,"To make use of NumPy, we have to install it and import it."),(0,l.kt)("p",null,"Here are the steps for same:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Step 1)")," Install NumPy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pip install numpy\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Step 2)")," Import the NumPy Module."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Step 3)")," Make use of np.array to convert list to an array"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_list = ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru'] \nnp_array = np.array(my_list)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Step 4)")," Get the index of the element you want, usingnp.where()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"item_index = np.where(np_array == 'Guru')[0]\n")),(0,l.kt)("p",null,"The final working code with output is as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nmy_list = ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru'] \nnp_array = np.array(my_list)\nitem_index = np.where(np_array == 'Guru')[0]\nprint(\"Originallist \", my_list)\nprint(\"Indexes for element Guru :\", item_index)\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"Originallist['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru']\nIndexes for element Guru : [0 3 6]\n")),(0,l.kt)("h2",{id:"using-more_itertoolslocate-to-get-the-index-of-an-element-in-a-list"},"Using more_itertools.locate() to get the index of an element in a list"),(0,l.kt)("p",null,"The more_itertools.locate() helps to find the indexes of the element in the list.This module will work with python version 3.5+. The package ",(0,l.kt)("strong",{parentName:"p"},"more_itertools")," has to be installed first to make use of it."),(0,l.kt)("p",null,"Following are the steps to install and make use of more_itertools"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Step1)")," Install more_itertools using pip (python package manager). The command is"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pip install more_itertools\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Step 2)")," Once the installation is done, import the locate module as shown below"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from more_itertools import locate\n")),(0,l.kt)("p",null,"Now you can make use of locate module on a list as shown below in the example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from more_itertools import locate\nmy_list = ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru'] \nprint(\"Originallist : \", my_list)\nprint(\"Indexes for element Guru :\", list(locate(my_list, lambda x: x == 'Guru'))) \n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Originallist :  ['Guru', 'Siya', 'Tiya', 'Guru', 'Daksh', 'Riya', 'Guru']\nIndexes for element Guru : [0, 3, 6]\n")),(0,l.kt)("h2",{id:"summary"},"Summary:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The list index() method helps you to find the index of the given element. This is the easiest and straightforward way to get the index."),(0,l.kt)("li",{parentName:"ul"},"The list index() method returns the index of the given element."),(0,l.kt)("li",{parentName:"ul"},"If the element is not present in the list, the index() method will throw an error, for example, ValueError: 'Element' is not in list."),(0,l.kt)("li",{parentName:"ul"},"Besides the built-in list method, you can also make use of other ways to get the index like looping through the list, using list comprehensions, using enumerate(), using a filter, etc."),(0,l.kt)("li",{parentName:"ul"},"Using for-loop and while-loop to get the multiple indexes of a given element."),(0,l.kt)("li",{parentName:"ul"},"To get all the indexes, a fast and straightforward way is to make use of list comprehension on the list."),(0,l.kt)("li",{parentName:"ul"},"List comprehensions are Python functions that are used for creating new sequences."),(0,l.kt)("li",{parentName:"ul"},"They help to reduce longer loops and make your code easier to read and maintain."),(0,l.kt)("li",{parentName:"ul"},"You can make use of enumerate to get all the indexes of the element in a list."),(0,l.kt)("li",{parentName:"ul"},"Enumerate() function is a built-in function available with python. It takes input as an iterable object (i.e., an object that can be looped), and the output is an object with a counter to each item."),(0,l.kt)("li",{parentName:"ul"},"The filter() method filters the given list based on the function given."),(0,l.kt)("li",{parentName:"ul"},"Numpy library is specially used for arrays. You can make use of NumPy to get the index of the element given in the list."),(0,l.kt)("li",{parentName:"ul"},"The more_itertools.locate() is yet another python library that helps to find the indexes of the list given.")))}h.isMDXComponent=!0}}]);